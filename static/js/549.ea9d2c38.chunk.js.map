{"version":3,"file":"static/js/549.ea9d2c38.chunk.js","mappings":"2KAEA,MAAMA,EAAU,mCACVC,EAAW,+BAGJC,EAAc,SAACC,GAAoB,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACvC,OAAOG,EAAAA,EAAMC,IAAI,GAADC,OAAIT,EAAQ,WAAAS,OAAUP,EAAI,aAAAO,OAAYV,EAAO,yBAAAU,OAAwBN,GACvF,EAEaO,EAAqBC,GACzBJ,EAAAA,EAAMC,IAAI,GAADC,OAAIT,EAAQ,WAAAS,OAAUE,EAAO,aAAAF,OAAYV,EAAO,oBAGrDa,EAAkBD,GACtBJ,EAAAA,EAAMC,IAAI,GAADC,OAAIT,EAAQ,WAAAS,OAAUE,EAAO,qBAAAF,OAAoBV,EAAO,oBAG7Dc,EAAe,SAACC,GAAqB,IAAdX,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACzC,OAAOG,EAAAA,EAAMC,IAAI,GAADC,OAAIT,EAAQ,0BAAAS,OAAyBV,EAAO,0BAAAU,OAAyBK,EAAK,UAAAL,OAASN,GACrG,EAEaY,EAAeC,GAAI,GAAAP,OAlBT,mCAkB+BA,OAAGO,E,qFChBzD,MAiDA,EAjDwBC,KACtB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,IAiBjC,OAfAG,EAAAA,EAAAA,YAAU,KACiBC,WACvB,IACE,MAAMC,QAAsBjB,EAAAA,EAAAA,IAAkBQ,GAC9CG,EAASM,EAAcC,MACvB,MAAMC,QAAqBjB,EAAAA,EAAAA,IAAeM,GAC1CM,EAAQK,EAAaD,KAAKL,KAC5B,CAAE,MAAOO,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,GAGFE,EAAkB,GACjB,CAACd,IAECE,GAGHa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKC,KAAKtB,EAAAA,EAAAA,IAAYK,EAAMkB,aAAcC,IAAKnB,EAAMoB,MAAON,UAAU,iBACtED,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKf,EAAMoB,SACXP,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAEf,EAAMqB,QAAQ,eAC7CR,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAEf,EAAMsB,aACrCT,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,IAAEf,EAAMuB,uBAGvCP,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACvBZ,EAAKqB,KAAIC,IACRZ,EAAAA,EAAAA,MAAA,OAA0BC,UAAU,YAAWC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OAAKC,KAAKtB,EAAAA,EAAAA,IAAY8B,EAAOC,cAAeP,IAAKM,EAAOE,QACxDd,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,UAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAASU,EAAOE,SAClBF,EAAOG,YAAaZ,EAAAA,EAAAA,KAAA,KAAAD,SAAIU,EAAOG,iBAJ1BH,EAAOI,iBAhBNb,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cAyBhB,C","sources":["api.js","pages/MovieDetailPage.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'ae753c68df4cb9e07bb6d20d2ed4d4c2';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport const fetchMovies = (type, page = 1) => {\r\n  return axios.get(`${BASE_URL}/movie/${type}?api_key=${API_KEY}&language=en-US&page=${page}`);\r\n};\r\n\r\nexport const fetchMovieDetails = (movieId) => {\r\n  return axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n};\r\n\r\nexport const fetchMovieCast = (movieId) => {\r\n  return axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\r\n};\r\n\r\nexport const searchMovies = (query, page = 1) => {\r\n  return axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}`);\r\n};\r\n\r\nexport const getImageUrl = (path) => `${IMAGE_BASE_URL}${path}`;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieDetails, fetchMovieCast, getImageUrl } from '../api';\r\nimport './MovieDetailPage.css'; \r\n\r\nconst MovieDetailPage = () => {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadMovieDetails = async () => {\r\n      try {\r\n        const movieResponse = await fetchMovieDetails(id);\r\n        setMovie(movieResponse.data);\r\n        const castResponse = await fetchMovieCast(id);\r\n        setCast(castResponse.data.cast);\r\n      } catch (error) {\r\n        console.error('Error fetching movie details:', error);\r\n      }\r\n    };\r\n\r\n    loadMovieDetails();\r\n  }, [id]);\r\n\r\n  if (!movie) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"movie-detail\">\r\n      <div className=\"movie-detail-header\">\r\n        <img src={getImageUrl(movie.poster_path)} alt={movie.title} className=\"movie-image\" />\r\n        <div className=\"movie-info\">\r\n          <h1>{movie.title}</h1>\r\n          <p><strong>Duration:</strong> {movie.runtime} minutes</p>\r\n          <p><strong>Overview:</strong> {movie.overview}</p>\r\n          <p><strong>Rating:</strong> {movie.vote_average}</p>\r\n        </div>\r\n      </div>\r\n      <h2>Cast</h2>\r\n      <div className=\"cast-list\">\r\n        {cast.map(member => (\r\n          <div key={member.cast_id} className=\"cast-card\">\r\n            <img src={getImageUrl(member.profile_path)} alt={member.name} />\r\n            <div>\r\n              <p><strong>{member.name}</strong></p>\r\n              {member.character && <p>{member.character}</p>}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailPage;\r\n\r\n"],"names":["API_KEY","BASE_URL","fetchMovies","type","page","arguments","length","undefined","axios","get","concat","fetchMovieDetails","movieId","fetchMovieCast","searchMovies","query","getImageUrl","path","MovieDetailPage","id","useParams","movie","setMovie","useState","cast","setCast","useEffect","async","movieResponse","data","castResponse","error","console","loadMovieDetails","_jsxs","className","children","_jsx","src","poster_path","alt","title","runtime","overview","vote_average","map","member","profile_path","name","character","cast_id"],"sourceRoot":""}