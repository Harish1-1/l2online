{"version":3,"file":"static/js/71.76356510.chunk.js","mappings":"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","sources":["api.js","components/MovieCard.js","components/MovieList.js","components/Pagination.js","pages/HomePage.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'ae753c68df4cb9e07bb6d20d2ed4d4c2';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport const fetchMovies = (type, page = 1) => {\r\n  return axios.get(`${BASE_URL}/movie/${type}?api_key=${API_KEY}&language=en-US&page=${page}`);\r\n};\r\n\r\nexport const fetchMovieDetails = (movieId) => {\r\n  return axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n};\r\n\r\nexport const fetchMovieCast = (movieId) => {\r\n  return axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\r\n};\r\n\r\nexport const searchMovies = (query, page = 1) => {\r\n  return axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}`);\r\n};\r\n\r\nexport const getImageUrl = (path) => `${IMAGE_BASE_URL}${path}`;\r\n","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getImageUrl } from '../api';\r\nimport './MovieCard.css'; \r\n\r\nconst MovieCard = ({ movie }) => {\r\n  return (\r\n    <div className=\"movie-card\">\r\n      <Link to={`/movie/${movie.id}`}>\r\n        <img src={getImageUrl(movie.poster_path)} alt={movie.title} />\r\n        <h3>{movie.title}</h3>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","\r\nimport React from 'react';\r\nimport MovieCard from './MovieCard';\r\nimport './MovieList.css'; \r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.map(movie => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","\r\nimport React from 'react';\r\nimport './Pagination.css'; \r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  const pages = Array.from({ length: totalPages }, (_, i) => i + 1);\r\n  return (\r\n    <div className=\"pagination\">\r\n      {pages.map(page => (\r\n        <button\r\n          key={page}\r\n          onClick={() => onPageChange(page)}\r\n          disabled={page === currentPage}\r\n        >\r\n          {page}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { fetchMovies } from '../api';\r\nimport MovieList from '../components/MovieList';\r\nimport Pagination from '../components/Pagination';\r\n\r\nconst HomePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadMovies = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetchMovies('popular', page);\r\n        setMovies(response.data.results);\r\n        setTotalPages(response.data.total_pages);\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadMovies();\r\n  }, [page]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <MovieList movies={movies} />\r\n      <Pagination currentPage={page} totalPages={totalPages} onPageChange={setPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["API_KEY","BASE_URL","fetchMovies","type","page","arguments","length","undefined","axios","get","concat","fetchMovieDetails","movieId","fetchMovieCast","searchMovies","query","getImageUrl","path","_ref","movie","_jsx","className","children","_jsxs","Link","to","id","src","poster_path","alt","title","movies","map","MovieCard","currentPage","totalPages","onPageChange","pages","Array","from","_","i","onClick","disabled","HomePage","setMovies","useState","setPage","setTotalPages","loading","setLoading","useEffect","async","response","data","results","total_pages","error","console","loadMovies","MovieList","Pagination"],"sourceRoot":""}